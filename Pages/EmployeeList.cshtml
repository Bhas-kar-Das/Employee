@page
@using Newtonsoft.Json;
@model Employee.Pages.EmployeeListModel
@{
    ViewData["Title"] = "Employee List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            padding-top: 20px;
        }

        .container {
            max-width: 1200px;
        }

        h2 {
            margin-bottom: 20px;
        }

        table {
            margin-bottom: 40px;
        }

        .table-warning {
            background-color: #fff3cd;
        }

        .chart-container {
            position: relative;
            height: 500px; 
            width: 500px; 
            margin: auto; 
        }

        canvas {
            height: 100% !important; 
            width: 100% !important; 
        }

        .chart-title {
            margin-bottom: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>@ViewData["Title"]</h2>

        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Total Hours Worked</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in Model.EmployeeTimes)
                    {
                        <tr class="@(employee.TotalHours < 100 ? "table-warning" : "")">
                            <td>@(string.IsNullOrEmpty(employee.Name) ? "Unknown Person" : employee.Name)</td>
                            <td>@employee.TotalHours.ToString("F2")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <h2 class="chart-title">Employee Work Time Distribution</h2>
        <div class="chart-container">
            <canvas id="pieChart"></canvas>
        </div>

        @section Scripts {
            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

            <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    var ctx = document.getElementById('pieChart').getContext('2d');
                    var data = @Html.Raw(JsonConvert.SerializeObject(Model.EmployeeTimes.Select(e => new { Name = string.IsNullOrEmpty(e.Name) ? "Unknown Person" : e.Name, e.TotalHours })));

                    new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: data.map(d => d.Name),
                            datasets: [{
                                label: 'Total Hours Worked',
                                data: data.map(d => d.TotalHours),
                                backgroundColor: [
                                    '#FF6384',
                                    '#36A2EB',
                                    '#FFCE56',
                                    '#4BC0C0',
                                    '#9966FF',
                                    '#FF9F40'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'right',
                                    labels: {
                                        font: {
                                            size: 14 
                                        }
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (tooltipItem) {
                                            var label = tooltipItem.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            label += tooltipItem.raw.toFixed(2) + ' hours';
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                });
            </script>
        }
    </div>
</body>
</html>
